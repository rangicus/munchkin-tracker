{"version":3,"sources":["comp/Counter.js","index.js"],"names":["Counter","props","name","change","n","c","val","min","max","func","style","fontWeight","className","onClick","App","useState","level","setLevel","gear","setGear","mod","setMod","total","isMale","setMale","resetPlayer","monsterLevel","setMonsterLevel","monsterMod","setMonsterMod","monsterTotal","modalVis","setModalVis","dice","setDice","prev","icon","faMars","faVenus","icons","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","faDiceSix","roll","Math","floor","random","faDice","fun","window","confirm","faUndo","Modal","show","Header","closeButton","Title","Body","size","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5773acf1.chunk.js","sourcesContent":["function Counter (props) {\n    const name = props.name || `Counter`;\n\n    function change (n) {\n        let c = props.val + n;\n\n        if (props.min && c < props.min) c = props.min;\n        if (props.max && c > props.max) c = props.max;\n\n        props.func(c);\n    }\n    \n    return (\n        <div>\n            <span\n                style = {{ fontWeight: `bold` }}\n                className = \"text-white\"\n            >{name}</span> <br/>\n\n            <button\n                onClick={() => change(1)}\n                className = \"btn btn-success\"\n            >+1</button> <br/>\n\n            <span className=\"text-white\">{props.val}</span> <br/>\n\n            <button\n                onClick={() => change(-1)}\n                className = \"btn btn-danger\"\n            >-1</button>\n\n        </div>\n    );\n}\n\nexport default Counter;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUndo,\n  faMars, faVenus,\n  faDice, faDiceOne, faDiceTwo, faDiceThree, faDiceFour, faDiceFive, faDiceSix\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Counter from \"./comp/Counter.js\";\n\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction App () {\n  // Player\n  const [ level, setLevel ] = useState(1);\n  const [ gear, setGear ] = useState(0);\n  const [ mod, setMod ] = useState(0);\n  const total = level + gear + mod;\n\n  const [ isMale, setMale ] = useState(true);\n  const swapGender = () => setMale(prev => !prev);\n  \n  const resetPlayer = () => { setLevel(1); setGear(0); setMod(0); }\n  const resetPlayerMod = () => { setMod(0); }\n\n  // Monster\n  const [ monsterLevel, setMonsterLevel ] = useState(0);\n  const [ monsterMod, setMonsterMod ] = useState(0);\n  const monsterTotal = monsterLevel + monsterMod;\n\n  const resetMonster = () => { setMonsterLevel(0); setMonsterMod(0); }\n\n  // Modal\n  const [ modalVis, setModalVis ] = useState(false);\n\n  const showModal = () => {\n    const icons = [null, faDiceOne, faDiceTwo, faDiceThree, faDiceFour, faDiceFive, faDiceSix];\n    const roll = Math.floor(Math.random() * 6) + 1;\n\n    setDice(icons[roll]);\n    setModalVis(true);\n  };\n\n  // Dice\n  const [ dice, setDice ] = useState(``);\n\n  // General\n  const doubleCheck = fun => window.confirm(`Are you sure?`) ? fun() : false;\n\n  const hideModal = () => setModalVis(false);\n\n  \n\n  return (\n    <div className=\"App\">\n      {/* Munchkin Stuff */}\n      <h1 className=\"text-center text-white\">Munchkin</h1>\n\n      <h1 className=\"text-center text-white\">{total}</h1>\n\n      <div className=\"text-center\">\n        <button className=\"btn btn-light\" onClick={swapGender}> <FontAwesomeIcon icon={isMale ? faMars : faVenus} /> </button>\n\n        <button className=\"btn btn-light\" onClick={showModal}> <FontAwesomeIcon icon={faDice} /> </button>\n\n        <button className=\"btn btn-danger\" onClick={() => doubleCheck(resetPlayer)}> <FontAwesomeIcon icon={faUndo} /> </button>\n      </div>\n\n      <hr/>\n\n      <table><tbody><tr>\n        <td>\n          <div className=\"text-center\">\n            <button className=\"btn btn-warning\" onClick={() => setLevel(0)}>\n              <FontAwesomeIcon icon={faUndo} />\n            </button>\n          </div>\n\n          <Counter\n            name = \"Level\"\n            func = {level => setLevel(level)}\n            val = {level}\n            min = {1}\n          />\n        </td>\n\n        <td>\n          <div className=\"text-center\">\n            <button className=\"btn btn-warning\" onClick={() => setGear(0)}>\n              <FontAwesomeIcon icon={faUndo} />\n            </button>\n          </div>\n\n          <Counter\n            name = \"Gear\"\n            func = {gear => setGear(gear)}\n            val = {gear}\n          />\n        </td>\n\n        <td>\n          <div className=\"text-center\">\n            <button className=\"btn btn-warning\" onClick={() => setMod(0)}>\n              <FontAwesomeIcon icon={faUndo} />\n            </button>\n          </div>\n\n          <Counter\n            name = \"Modifiers\"\n            func = {mod => setMod(mod)}\n            val = {mod}\n          />\n        </td>\n      </tr></tbody></table>\n      \n      <hr/>\n\n      {/* Monster Stuff */}\n      <h2 className=\"text-center text-white\">Monster Stats</h2>\n\n      <h1 className=\"text-center text-white\">{monsterTotal}</h1>\n      <div className=\"text-center\">\n        <button className=\"btn btn-warning\" onClick={resetMonster}>\n          <FontAwesomeIcon icon={faUndo} />\n        </button>\n      </div>\n\n      <hr/>\n\n      <table><tbody><tr>\n        <td><Counter\n          name = \"Level\"\n          func = {level => setMonsterLevel(level)}\n          val = {monsterLevel}\n        /></td>\n\n        <td><Counter\n          name = \"Modifiers\"\n          func = {mod => setMonsterMod(mod)}\n          val = {monsterMod}\n        /></td>\n      </tr></tbody></table>\n\n      {/* Dice Modal */}\n      <Modal show={modalVis}>\n        <Modal.Header closeButton>\n          <Modal.Title>Roll Result</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"diceHolder\"> <FontAwesomeIcon icon={dice} size=\"10x\" /> </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <div className=\"text-center\">\n            <button className=\"btn btn-success\" onClick={hideModal}>Close</button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n\n    </div>\n  );\n}\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render( <App />, document.getElementById('root') );"],"sourceRoot":""}